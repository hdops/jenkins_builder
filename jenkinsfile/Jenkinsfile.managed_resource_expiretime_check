def node="master"
if (env.node){
    node =env.node
}

def whether_post="False"
if (env.whether_post){
    whether_post =env.whether_post
}

def toolset_image_version="0.3.0"
if (env.toolset_image_version){
    toolset_image_version = env.toolset_image_version
}

def configfile = ''
if (env.configfile){
    configfile = env.configfile
}

def run_on_public="None"
if (env.run_on_public){
    run_on_public=env.run_on_public
}
if (!env.on_k8s){
    env.on_k8s="False"
}
if (env.set_on_k8s) {
    env.on_k8s=env.set_on_k8s
}
pipeline {
    agent {label node}
    options {   
	    timeout(time: 3, unit: 'HOURS')
    }              
    stages {
		stage('资源到期巡检') {
			steps{
				script{
                    if(env.on_k8s == 'True'){
                        container("hdtoolsetcore"){
                            echo "profile is ${params.DNET_PROFILE}"
                            echo "sub systems are ${params.subsystem}"
                            echo "upstream URL is ${params.upurl}"
                            retry(2){
                                sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet TRUST_PUBLIC_IP=${run_on_public} hdops download_toolset --branch develop -p ."
                            }
                            sh "tar zxf toolset.tar.gz -C ${WORKSPACE}"
                            sh "hdmon check_expiretime_managed_cloud_resource --configfile $configfile"
                        }
                    }else{
                        docker.image("harbor.qianfan123.com/toolset/toolsetcore:${toolset_image_version}").inside {
                            echo "profile is ${params.DNET_PROFILE}"
                            echo "sub systems are ${params.subsystem}"
                            echo "upstream URL is ${params.upurl}"
                            retry(2){
                                sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet TRUST_PUBLIC_IP=${run_on_public} hdops download_toolset --branch develop -p ."
                            }
                            sh "tar zxf toolset.tar.gz -C ${WORKSPACE}"
                            sh "hdmon check_expiretime_managed_cloud_resource --configfile $configfile"
                        }
                    }
                }
			}
        }
    }
	post {
    // 构建失败之后钉钉通知
        failure {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "构建失败 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
                emailext(recipientProviders: [developers(),requestor(),culprits()],to:'buhaiqing@hd123.com',  subject: "managed resource check failed", body: "failure on Job ${env.BUILD_URL}",attachLog:false)
            }
        }
	// 失败转成功之后钉钉通知
        fixed {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "恢复正常 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
                emailext(recipientProviders: [developers(),requestor(),culprits()],to:'buhaiqing@hd123.com',  subject: "managed resource check succeed", body: "failure on Job ${env.BUILD_URL}",attachLog:false)
            }
        }
    }
}

