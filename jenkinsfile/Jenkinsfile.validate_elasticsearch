def node="master"
if (env.node){
    node =env.node
}

def whether_post="False"
if (env.whether_post){
    whether_post =env.whether_post
}

pipeline {
    agent {
       docker{
         label  node
         image "harbor.qianfan123.com/toolset/toolsetcore:0.3.0"
         args "-v /var/run/docker.sock:/var/run/docker.sock"
       }
   }
	options {
	//    buildDiscarder(logRotator(numToKeepStr: '20'))
	//    disableConcurrentBuilds()
	//    disableResume()
	    timeout(time: 5, unit: 'MINUTES')
    }
	// environment{
    //     DNET_PRIVATE_AK="$DNET_PRIVATE_AK"
    //     DNET_PRIVATE_AS="$DNET_PRIVATE_AS"
 	// }
	// parameters {
	//    choice(name:'DNET_PROFILE', choices:'production')
	//   // choice(name: 'DINGTALK_TOKEN', choices: ['9d304e1503e4e21aa7ecd9d30d8d0fab168901cbfc989310921c98e44bf07c47'])
	//    string(name: 'GIT_BRANCH', defaultValue: 'develop')
	// }
	// triggers {
    //     cron 'H/15 * * * *'
    //  }
    stages {  
		stage('validate elasticsearch') {
            steps {
                script{
                    // 判定是否运行在Kubernetes环境里
                    if (env.on_k8s){
                        container("hdtoolsetcore"){
                            retry(2){
                                sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet hdops download_toolset --branch ${params.GIT_BRANCH} -p ."
                            }
                            sh "tar zxf toolset.tar.gz -C ${WORKSPACE}"
                            sh "DINGTALK_TOKEN=${DINGTALK_TOKEN} DNET_PRODUCT=${params.DNET_PRODUCT} DNET_PROFILE=${params.DNET_PROFILE} hdops valiate_elasticsearch --job_name ${params.job_name} --disk_space_usage ${params.disk_space_usage}"
                        }
                    }else {
                        retry(2){
                            sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet hdops download_toolset --branch ${params.GIT_BRANCH} -p ."
                        }
                        sh "tar zxf toolset.tar.gz -C ${WORKSPACE}"
                        sh "DINGTALK_TOKEN=${DINGTALK_TOKEN} DNET_PRODUCT=${params.DNET_PRODUCT} DNET_PROFILE=${params.DNET_PROFILE} hdops valiate_elasticsearch --job_name ${params.job_name} --disk_space_usage ${params.disk_space_usage}"
                    }
                }
                
            }
		}
    }
 	post {
     // 构建失败之后钉钉通知
         failure {
             script {
                 if (whether_post == "True") {
                     dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "Build failed ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                 }
             }
         }
 	// 失败转成功之后钉钉通知
         fixed {
             script {
                 if (whether_post == "True") {
                     dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "Back To Normal ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                 }
             }
         }
     }
}

