def node=""
if (env.node){
    node =env.node
}else{
    node ="master"
}
def whether_post=""
if (env.whether_post){
    whether_post =env.whether_post
}else{
    whether_post ="True"
}
pipeline {
    agent {label node}
    stages {
        stage('save image env') {
			steps{
				script {
                    if (env.on_k8s){
                        container("hdtoolsetcore"){
                            echo "active profile is ${params.DNET_PROFILE}"
                            echo "product is ${params.DNET_PRODUCT}"
                            echo "workspace is $WORKSPACE"
                            retry(2){
                                sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet hdops download_toolset --branch ${params.GIT_BRANCH} -p ."
                            }
                            sh "tar zxf toolset.tar.gz -C $WORKSPACE"
                            sh "DNET_AK=${params.DNET_AK} DNET_PRODUCT=${params.DNET_PRODUCT} DNET_PROFILE=${params.DNET_PROFILE}  hdops save_image_env --images ${params.images}"
                            archiveArtifacts 'envs/**/*'
                        }
                    }else {
                        echo "active profile is ${params.DNET_PROFILE}"
                        echo "product is ${params.DNET_PRODUCT}"
                        echo "workspace is $WORKSPACE"
                        retry(2){
                            sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet hdops download_toolset --branch ${params.GIT_BRANCH} -p ."
                        }
                        sh "tar zxf toolset.tar.gz -C $WORKSPACE"
                        sh "DNET_AK=${params.DNET_AK} DNET_PRODUCT=${params.DNET_PRODUCT} DNET_PROFILE=${params.DNET_PROFILE}  hdops save_image_env --images ${params.images}"
                        archiveArtifacts 'envs/**/*'
                    }
                }
			}
        }
        
    }
}
