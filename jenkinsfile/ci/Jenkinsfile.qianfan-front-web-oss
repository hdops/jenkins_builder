def node="master"
if (env.node){
    node =env.node
}

def run_on_public="None"
if (env.run_on_public){
    run_on_public=env.run_on_public
}
if (!env.on_k8s){
    env.on_k8s="False"
}
if (env.set_on_k8s) {
    env.on_k8s=env.set_on_k8s
}
pipeline {
	agent {
        docker {
        label node
        image "harbor.qianfan123.com/toolset/toolsetcore:0.3.0"
        args '--rm -v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker --add-host=hd-hz-public.oss-cn-hangzhou-internal.aliyuncs.com:47.110.23.37'
        }
     }
    options {
	//     buildDiscarder(logRotator(numToKeepStr: '10'))
	//     disableConcurrentBuilds()
	//     disableResume()
	    timeout(time: 1, unit: 'HOURS')
    } 
    stages {
        stage('delete workspace') {
            steps{
                deleteDir()
            }
        }
        stage('download_toolset'){ 
			steps{
                echo "active profile is ${DNET_PROFILE}"
                echo "workspace is $WORKSPACE"
                retry(2){
                    sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet TRUST_PUBLIC_IP=${run_on_public} hdops download_toolset --branch ${build_branch} -p ."
                }
                sh "tar zxf toolset.tar.gz -C $WORKSPACE"
			}
		}
        stage('qianfan-front-web-oss'){ 
			steps{   
			    sh "DNET_CLOUD_VENDOR=${params.DNET_CLOUD_VENDOR} DNET_PROFILE=${params.DNET_PROFILE} CACHECONTROL_MAX_AGE=${params.CACHECONTROL_MAX_AGE} python qf_front_backend.py -download_url ${params.oss_resources} -download_from_jenkins  ${env.download_from_jenkins}  -subsystem ${params.subsystem}"
			}
		}
    }
    post{
        always{
            script{
                currentBuild.description = "${params.subsystem}"
            }
        }
    }
}
