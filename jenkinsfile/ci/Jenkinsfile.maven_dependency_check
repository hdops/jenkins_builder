def node="master"
if (env.node){
    node =env.node
}

def run_on_public="None"
if (env.run_on_public){
    run_on_public=env.run_on_public
}
if (!env.on_k8s){
    env.on_k8s="False"
}
if (env.set_on_k8s) {
    env.on_k8s=env.set_on_k8s
}
pipeline {
	agent {
			    docker {
			    label node
			    image "harbor.qianfan123.com/toolset/toolsetcore:0.3.0"
			    args '-v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker'
			    }
             }
    options {
	//     buildDiscarder(logRotator(numToKeepStr: '10'))
	//     disableConcurrentBuilds()
	//     disableResume()
	    timeout(time: 1, unit: 'HOURS')
    } 
    stages {
        stage('download_toolset'){ 
			steps{
                            echo "workspace is $WORKSPACE"
                            retry(2){
                                sh "TRUST_PUBLIC_IP=true DNET_PROFILE=integration_test DNET_PRODUCT=dnet TRUST_PUBLIC_IP=${run_on_public} hdops download_toolset --branch develop -p ."
                            }
                            sh "tar zxf toolset.tar.gz -C $WORKSPACE"
			}
		}
        stage('maven_dependency_check'){ 
			steps{   
                            echo "upurl is ${params.upurl}"
                            echo "isrelease  ${params.isrelease}"
							sh "hdmon maven_dependency_check --jenkins_url ${params.upurl} --isrelease ${params.isrelease}" 
			}
		}
    }
}