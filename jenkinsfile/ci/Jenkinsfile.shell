def node="master"
if (env.node){
    node =env.node
}

def maven_image=""
if (env.maven_image){
    maven_image =env.maven_image
}else{
    maven_image ="harbor.qianfan123.com/base/maven:3.3.9_jdk8"
}

def credentialsId="appGitLab"
if (env.credentials_id){
  credentialsId = env.credentials_id
}

def mvn_configfile="jdk8"
if (env.mvn_configfile){
    mvn_configfile =env.mvn_configfile
}

def docker_args="--rm -v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker --add-host=maven.qianfan123.com:172.17.0.82 --add-host=apidoc.hd123.com:172.17.10.53 --add-host=github.app.hd123.cn:172.17.10.58 --add-host=gitlab.hd123.com:172.17.12.219 "
if (env.maven_repository){
    docker_args+=" -v "+env.maven_repository
}else{
    docker_args+=" -v /hdapp/java:/hdapp/java"
}

pipeline{
    agent {
        docker {
            image "${maven_image}"
            label node
            args "${docker_args}"
        }
    }
    stages{
        stage("clean workspace"){
            steps{
                deleteDir()
            }
        }
        stage("check scm"){
            steps{
                script{
                    if (!git_url) {
                        echo "请输入git地址"
                        sh "false"
                    }
                    git branch: "${build_branch}", credentialsId: "${credentialsId}", url: "${ci_git_server_baseurl}/${git_project}.git"
                }
            }
        }
        stage("build"){
            steps{
                script{
                    if (!shell_file) {
                        echo "请输入脚本文件位置"
                        sh "false"
                    }
                    if (env.mvn_opt == 'True') {
                        configFileProvider([configFile(fileId:mvn_configfile, variable: 'maven_settings')]) {
                            shell_file+=" $maven_settings"
                            echo "do shell is ${shell_file}"
                            sh "${shell_file}"
                        }
                    } else {
                        sh "${shell_file}"
                    }
                    archiveArtifacts '*.tar.gz' 
                }
            }
        }
    }
}
