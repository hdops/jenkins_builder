def node="master"
if (env.node){
    node =env.node
}

def node_image= "harbor.qianfan123.com/base/node:9-alpine"
if (env.node_image){
    node_image =env.node_image
}

def credentialsId="qianfan"

pipeline {
    // agent {label node}
    agent {
		docker {
            image "${node_image}"
            args '-v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker'
          }
	}
    options {
	//     buildDiscarder(logRotator(numToKeepStr: '10'))
	//     disableConcurrentBuilds()
	//     disableResume()
	    timeout(time: 1, unit: 'HOURS')
    } 
    stages {
        stage('delete workspace'){
		    when {
			    expression {'Y' == "${params.deleteWorkspace}"}
			}
			steps{
			    deleteDir()
			}
		}
         stage('checkout') {
             steps{ 
				echo "checkout http://github.app.hd123.cn:10080/${git_project}.git  branch:${build_branch}"
				git branch: "${build_branch}", credentialsId: "${credentialsId}", url: 'http://github.app.hd123.cn:10080/${git_project}.git'
             }
         }  
		stage('build') {
		    steps{
				script{  
					echo "npm_shell is ${npm_shell}"
					sh "  ${npm_shell}" 
					if (env.docker_build_tag){
						echo "docker_build_tag is ${docker_build_tag}"
						docker_build_shell = "docker build -t " + env.docker_build_tag + " . && docker login -u admin -p hoS9sTHXQhpGvwa2  harbor.qianfan123.com && docker push " + env.docker_build_tag
							//echo "docker_build_shell is ${docker_build_shell}"
						sh "  ${docker_build_shell}"  
					}
				}
			} 
		}
        stage('deploy'){ 
			when {
                anyOf {
                    environment name: 'remoteJenkins', value: 'aliyun'
                    environment name: 'remoteJenkins', value: 'lhhspay'
                    environment name: 'remoteJenkins', value: 'ays'
                }
            }
			steps{
				triggerRemoteJob job: "${remoteJob}", maxConn: 1, parameters: '''DNET_PRODUCT=${DNET_PRODUCT}
DNET_PROFILE=${DNET_PROFILE}
subsystem=${subsystem} 
GIT_BRANCH=develop''', remoteJenkinsName: "${remoteJenkins}", useCrumbCache: true, useJobInfoCache: true
			}
		}
    }
}