def node="master"
if (env.node){
    node =env.node
}

def credentialsId="qianfan"

//  主要需要 git + dokcer 环境
def build_image= "harbor.qianfan123.com/base/golang:1.14.2"
if (env.build_image){
    build_image =env.build_image
}


pipeline {
    // agent {label node}
    agent {
		docker {
            image "${build_image}"
            label node
            args '-v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker -v /root/.docker/config.json:/root/.docker/config.json'
          }
	}
    options {
	//     buildDiscarder(logRotator(numToKeepStr: '10'))
	//     disableConcurrentBuilds()
	//     disableResume()
	    timeout(time: 1, unit: 'HOURS')
    } 
    stages {
        stage('delete workspace'){
		    when {
			    expression {'Y' == "${params.deleteWorkspace}"}
			}
			steps{
			    deleteDir()
			}
		}
         stage('checkout') {
             steps{ 
				echo "checkout http://github.app.hd123.cn:10080/${git_project}.git  branch:${build_branch}"
                checkout([$class: 'GitSCM', branches: [[name: '*/${build_branch}']],userRemoteConfigs: [[url: 'http://github.app.hd123.cn:10080/${git_project}.git',credentialsId: "${credentialsId}"]]])
                sh "cat /root/.git-credentials"
                sh """git config --global user.email qianfan@hd123.com
git config --global user.name qianfan
git checkout ${releaseBranchName}
git checkout ${build_branch}
git pull
git merge -s recursive -X theirs ${releaseBranchName} -m '版本发布'
git add .
make modify-ver
git commit -m "${releaseVersion}"
git push origin ${build_branch}
git tag ${releaseVersion}
git push --tags"""
             }
         }
		stage('build') {
		    steps{
				script{
					sh "docker -v"
					echo "build_image is ${build_image}"
					docker_build_shell = "make all"
					sh "${docker_build_shell}"
				}
			} 
		}
    }
}