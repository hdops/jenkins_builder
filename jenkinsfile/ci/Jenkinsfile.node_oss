def node="master"
if (env.node){
    node =env.node
}

def node_image= "harbor.qianfan123.com/base/node:9-alpine"
if (env.node_image){
    node_image =env.node_image
}

def credentialsId="qianfan"

pipeline {
	agent none
    options {
	//     buildDiscarder(logRotator(numToKeepStr: '10'))
	//     disableConcurrentBuilds()
	//     disableResume()
	    timeout(time: 1, unit: 'HOURS')
    } 
    stages {
        stage('delete workspace'){
		    when {
			    expression {'Y' == "${params.deleteWorkspace}"}
			}
			steps{
			    deleteDir()
			}
		}
         stage('checkout & build') {
              agent {
			    docker {
			    image "${node_image}"
			    args '-v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker'
			    }
             }
             steps{ 
				echo "checkout http://github.app.hd123.cn:10080/${git_project}.git  branch:${build_branch}"
				// git branch: "${build_branch}", credentialsId: "${credentialsId}", url: 'http://github.app.hd123.cn:10080/${git_project}.git'
                checkout([$class: 'GitSCM', branches: [[name: '*/${build_branch}']],userRemoteConfigs: [[url: 'http://github.app.hd123.cn:10080/${git_project}.git',credentialsId: "${credentialsId}"]]])
				
				echo "npm_shell is ${npm_shell}"
				sh "  ${npm_shell}" 
				archiveArtifacts '*.tar.gz' 
             }
         }  
        stage('createResourcePackage'){ 
              agent {
			    docker {
			    image "harbor.qianfan123.com/toolset/toolsetcore:0.3.0"
			    args '-v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker --add-host=hd-hz-public.oss-cn-hangzhou-internal.aliyuncs.com:47.110.23.37'
			    }
             }
			steps{
                            echo "active profile is ${DNET_PROFILE}"
                            echo "workspace is $WORKSPACE"
                            retry(2){
                                //sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet hdops download_toolset --branch ${params.GIT_BRANCH} -p ."
								sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet hdops download_toolset --branch develop -p ."
                            }
                            sh "tar zxf toolset.tar.gz -C $WORKSPACE"
                            // sh "DNET_PRODUCT=${params.DNET_PRODUCT} DNET_PROFILE=${params.DNET_PROFILE} hdmon deploy_resource_package --download_package ${params.download_package} --subsystem ${params.subsystem}" 
                            sh "DNET_PROFILE=${DNET_PROFILE} python createResourcePackage.py -download_url ${BUILD_URL} -fromVersion ${fromVersion} -toVersion ${toVersion} -alias ${alias} -subsystem ${subsystem}" 
			}
		}
        stage('qianfan-front-web-oss'){ 
              agent {
			    docker {
			    image "harbor.qianfan123.com/toolset/toolsetcore:0.3.0"
			    args '-v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker --add-host=hd-hz-public.oss-cn-hangzhou-internal.aliyuncs.com:47.110.23.37'
			    }
             }
			steps{
                            echo "active profile is ${DNET_PROFILE}"
                            echo "workspace is $WORKSPACE"
                            retry(2){
                                //sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet hdops download_toolset --branch ${params.GIT_BRANCH} -p ."
								sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet hdops download_toolset --branch develop -p ."
                            }
                            sh "tar zxf toolset.tar.gz -C $WORKSPACE"
                            sh "DNET_CLOUD_VENDOR=${DNET_CLOUD_VENDOR} DNET_PROFILE=${DNET_PROFILE} python qf_front_backend.py -download_url ${subsystem}-${fromVersion}-${alias}.tar.gz -download_from_jenkins  ${download_from_jenkins}  -subsystem ${subsystem}" 
			}
		}
    }
}