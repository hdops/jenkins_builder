def node=""
if (env.node){
    node =env.node
}else{
    node ="develop"
}
if (env.build_branch == null){
    env.build_branch = "develop"
}
if (env.releaseBranchName == null){
    env.releaseBranchName = "release"
}

def ci_git_server_baseurl= "https://gitlab.hd123.com"
if (env.ci_git_server_baseurl){
    ci_git_server_baseurl = env.ci_git_server_baseurl
}

def maven_image=""
if (env.maven_image){
    maven_image =env.maven_image
}else{
    maven_image ="harborka.qianfan123.com/base/maven:3.2.5-centos7-h6"
}

def docker_args="--rm -v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker"
if (env.maven_repository){
    docker_args+=" -v "+env.maven_repository+":/hdapp/java"
}else{
    docker_args+=" -v /hdapp/java:/hdapp/java"
}

def mvn_configfile="jdk8"
if (env.mvn_configfile){
    mvn_configfile =env.mvn_configfile
}

def credentialsId="qianfan"


def run_on_public="None"
if (env.run_on_public){
    run_on_public=env.run_on_public
}
if (!env.on_k8s){
    env.on_k8s="False"
}
if (env.set_on_k8s) {
    env.on_k8s=env.set_on_k8s
}
pipeline {
    agent {docker {
            image "${maven_image}"
            label node
            args "${docker_args}"
          }}
    options {
	//     buildDiscarder(logRotator(numToKeepStr: '10'))
	//     disableConcurrentBuilds()
	//     disableResume()
	    timeout(time: 1, unit: 'HOURS')
    }
    stages {
        stage('delete workspace') {
            steps{
                deleteDir()
            }
        }
        stage('checkout') {
            steps{
                echo "checkout ${ci_git_server_baseurl}/${git_project}.git  branch:${build_branch}"
                retry(5){
                    checkout([$class: 'GitSCM', branches: [[name: "*/${build_branch}"]],userRemoteConfigs: [[credentialsId: 'qianfan',url: "${ci_git_server_baseurl}/${git_project}.git"]],extensions: [[$class: 'LocalBranch', localBranch: "${build_branch}"]]])
                }
            }
        }
        stage('latin-merge') {
            steps{
                sh """
				git clone -b ${release_src_version} https://gitlab.hd123.com/HDPOS4.6/latin-ext-lib.git latin-ext-lib
				cd latin-ext-lib
				git tag -a ${release_tar_version} -m 'V'${release_tar_version}
				git push https://gitlab.hd123.com/HDPOS4.6/latin-ext-lib.git ${release_tar_version}
				cd ..
				git clone -b ${release_src_version} https://gitlab.hd123.com/HDPOS4.6/latin-ext-packages.git latin-ext-packages
				cd latin-ext-packages
				git tag -a ${release_tar_version} -m 'V'${release_tar_version}
				git push https://gitlab.hd123.com/HDPOS4.6/latin-ext-packages.git ${release_tar_version}
				cd ..
				git clone -b ${release_src_version} https://gitlab.hd123.com/HDPOS4.6/latin-ext-admin.git latin-ext-admin
				cd latin-ext-admin
				git tag -a ${release_tar_version} -m 'V'${release_tar_version}
				git push https://gitlab.hd123.com/HDPOS4.6/latin-ext-admin.git ${release_tar_version}"""
            }
        }
    }
    post{
        success{
            script{
                if (env.post_shell){
                    sh """
                    ${env.post_shell}
                    """
                }
            }
        }
        failure{
            script{

                def subject = env.email_subject ? "[Jenkins]${env.email_subject}" : "[Jenkins]failure on Job ${env.JOB_NAME}"
                def to = env.email_recipients ? "${env.email_recipients}" : "heweiwei@hd123.com"
                def body = env.email_body ? "${env.email_body}" : "failure on Job ${env.JOB_NAME}"
                // send email
                emailext subject: subject, to: to, body:body,attachLog:true
            }
        }
    }
}
