def node="develop"
if (env.node){
    node =env.node
}

def ci_git_server_baseurl= "https://gitlab.hd123.com"
if (env.ci_git_server_baseurl){
    ci_git_server_baseurl = env.ci_git_server_baseurl
}

def jpos_image= "harborka.qianfan123.com/base/maven:3.2.5-centos7-ci"
if (env.jpos_image){
    jpos_image =env.jpos_image
}

def credentialsId="appGitLab"
if (env.credentials_id){
  credentialsId = env.credentials_id
}

def run_on_public="None"
if (env.run_on_public){
    run_on_public=env.run_on_public
}
if (!env.on_k8s){
    env.on_k8s="False"
}
if (env.set_on_k8s) {
    env.on_k8s=env.set_on_k8s
}

def gitpath = "None"
if (env.gitpath){
    gitpath = env.gitpath
}

def build_number=env.BUILD_NUMBER
def toolset_image_version="0.3.0"

pipeline {
    agent {
		docker {
            alwaysPull true
		    label node
            image "${jpos_image}"
            args "--rm -v /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime -v /etc/timezone:/etc/timezone -v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker -v /hdapp/npm:/root/.npm -v /root/.npmrc:/root/.npmrc -v /root/.docker/config.json:/root/.docker/config.json  --add-host=maven.qianfan123.com:172.17.0.82 --add-host=github.app.hd123.cn:172.17.10.58 --add-host=gitlab.hd123.com:172.17.12.219 --entrypoint='' "
          }
	}
    options {
	    timeout(time: 1, unit: 'HOURS')
    } 
    stages {
        stage('delete workspace'){
		    when {
			    expression {'Y' == "${params.deleteWorkspace}"}
			}
			steps{
			    deleteDir()
			}
		}
         stage('checkout') {
             steps{ 
				echo "checkout ${ci_git_server_baseurl}/${git_project}.git  branch:${build_branch}"
				retry(5){
                    checkout([$class: 'GitSCM', branches: [[name: "*/${build_branch}"]],userRemoteConfigs: [[credentialsId: "${credentialsId}",url: "${ci_git_server_baseurl}/${git_project}.git"]]])
				}
             }
         }  
		stage('build') {
		    steps{
				script{  
                        def jpos_build_shell="sh "
					    jpos_build_shell+=env.jpos_build
					    if (env.docker_build == "true"){
						    jpos_build_shell+=" -Pdocker"
					        echo "jpos_build_shell is ${jpos_build_shell}"
						    sh "  ${jpos_build_shell}"
                        }
                        else{ 
                            echo "jpos_build_shell is ${jpos_build_shell}"
					        sh "  ${jpos_build_shell}"
                        }
				}
			} 
		}
		stage('push oss'){
			steps{
                script{
                        withDockerContainer(image: "harbor.qianfan123.com/toolset/toolsetcore:${toolset_image_version}"){
                            retry(2){
                                echo "workspace is $WORKSPACE"
                                sh "hdops kpos_integration --path ${WORKSPACE} --profile ${params.kpos_profile} --app_mgr_url ${params.app_mgr_url} --version ${params.version} --build_number $build_number --token $app_mgr_token"
                            }
                        }
                    }
                }
        }
    }
}
