def node="master"
if (env.node){
    node =env.node
}

def whether_post="False"
if (env.whether_post){
    whether_post =env.whether_post
}
def toolset_image_version="0.3.0-private"
if (env.toolset_image_version){
    toolset_image_version = env.toolset_image_version
}
def run_on_public="None"
if (env.run_on_public){
    run_on_public=env.run_on_public
}
pipeline {
    agent {label node}             

	stages {
	    stage('delete workspace') {
			steps{
				deleteDir()
			}
        }
	    stage('导出cmdb数据') {
			steps{
				script {
					if(env.on_k8s){
						container("hdtoolsetcore"){
							echo "active profile is ${params.DNET_PROFILE}"
							echo "product is ${params.DNET_PRODUCT}"
							echo "workspace is $WORKSPACE"
							sh "git clone http://${GIT_USER}:${GIT_PASSWORD}@github.app.hd123.cn:10080/qianfanops/toolset.git -b ${params.GIT_BRANCH} ."
							sh "git config --global user.email qianfan@hd123.com"
							sh "git config --global user.name qianfan"
							sh "DNET_PRODUCT=${params.DNET_PRODUCT} DNET_PROFILE=${params.DNET_PROFILE} hdops export_cmdb --toolset_x ${params.toolset_x}"
						}
					}else {
					    docker.image("harbor.qianfan123.com/toolset/toolsetcore:${toolset_image_version}").inside  {
                            echo "active profile is ${params.DNET_PROFILE}"
                            echo "product is ${params.DNET_PRODUCT}"
                            echo "workspace is $WORKSPACE"
                            sh "git clone http://${GIT_USER}:${GIT_PASSWORD}@github.app.hd123.cn:10080/qianfanops/toolset.git -b ${params.GIT_BRANCH} ."
                            sh "git config --global user.email qianfan@hd123.com"
                            sh "git config --global user.name qianfan"
                            sh "DNET_PRODUCT=${params.DNET_PRODUCT} DNET_PROFILE=${params.DNET_PROFILE} hdops export_cmdb --toolset_x ${params.toolset_x}"
					    }
					}
				}
			}
        }
	    
	}
	post {
    // 构建失败之后钉钉通知
        failure {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "构建失败 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
	// 失败转成功之后钉钉通知
        fixed {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "恢复正常 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
    }
}
