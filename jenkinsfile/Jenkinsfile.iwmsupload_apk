def node=""
if (env.node){
    node =env.node
}else{
    node ="master"
}
def whether_post=""
if (env.whether_post){
    whether_post =env.whether_post
}else{
    whether_post ="True"
}
def toolset_image_version="0.3.0"
if (env.toolset_image_version){
    toolset_image_version = env.toolset_image_version
}



def run_on_public="None"
if (env.run_on_public){
    run_on_public=env.run_on_public
}
if (!env.on_k8s){
    env.on_k8s="False"
}
if (env.set_on_k8s) {
    env.on_k8s=env.set_on_k8s
}
pipeline {
    agent {label node}
    options {   
	    timeout(time: 1, unit: 'HOURS')
    }           
	stages {
	    stage('删除workspace') {
            steps{
                deleteDir()
            }
        }
		stage('upload iwms apk file') {
			steps{
                script {
                    if(env.on_k8s == 'True'){
                        container("hdtoolsetcore"){
                            retry(2){
                                sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet TRUST_PUBLIC_IP=${run_on_public} hdops download_toolset --branch develop -p ."
                                sh "tar zxf toolset.tar.gz -C ${WORKSPACE}"
                                sh "hdops iwms_android_upload --jenkins_build_url ${params.jenkins_build_url} --oss_prefix ${params.oss_prefix} "
                            }
                        }
                    }else {
                       docker.image("harbor.qianfan123.com/toolset/toolsetcore:${toolset_image_version}").inside  {
                            retry(2){
								echo "${params.jenkins_build_url}"
								echo "oss_prefix is ${params.oss_prefix}"
								echo "hdops iwms_android_upload --jenkins_build_url ${params.jenkins_build_url} --oss_prefix ${params.oss_prefix} "
                                sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet TRUST_PUBLIC_IP=${run_on_public} hdops download_toolset --branch develop -p ."
                                sh "tar zxf toolset.tar.gz -C ${WORKSPACE}"
                                sh "hdops iwms_android_upload --jenkins_build_url ${params.jenkins_build_url} --oss_prefix ${params.oss_prefix} "
                            }
                       }

                    }
                }
			}
        }
	   
	}
	post {
    // 构建失败之后钉钉通知
        failure {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "构建失败 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
	// 失败转成功之后钉钉通知
        fixed {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "恢复正常 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
    }
}

