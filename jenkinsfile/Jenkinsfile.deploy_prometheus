def node="master"
if (env.node){
    node =env.node
}

def git_project_url="http://github.app.hd123.cn:10080/qianfanops/prometheus.git"
if (env.git_project_url){
    git_project_url=env.git_project_url
}

if (!env.on_k8s){
    env.on_k8s="False"
}
if (env.set_on_k8s) {
    env.on_k8s=env.set_on_k8s
}
on_k8s=env.on_k8s

def git_project_branch="master"
if (env.git_project_branch){
    git_project_branch=env.git_project_branch
}

def YAML_FILE="kubernetes_pod_template.yaml"
def docker_image="harbor.qianfan123.com/toolset/ka-toolset-runenv:1.0"

pipeline {
	agent {
        label node
    }

    options {
	    timeout(time: 3, unit: 'HOURS')
    }

    stages {
        stage('advance prepare on k8s to read yaml') {
            when {
                beforeAgent true
                environment name: 'on_k8s', value: 'True'
            }

            steps {
                script{
                    echo "node : ${node}"
                    echo "on_k8s : ${on_k8s}"
                    kubernetesPodYamlData = readYaml file: "jenkinsfile/${YAML_FILE}"
                } 
            }
        }

        stage('delete workspace') {
            steps{
                deleteDir()
            }
        }

        stage('prepare on k8s') {
            when {
                beforeAgent true
                environment name: 'on_k8s', value: 'True'
            }

            steps {
                script{
                    kubernetesPodYamlData.spec.containers[0].image = "docker_image"
                    writeYaml file: "${WORKSPACE}/${YAML_FILE}", data: kubernetesPodYamlData
                    sh "cat ${WORKSPACE}/${YAML_FILE}"
                    kubernetesPodReadYamlData = sh(script: "cat ${WORKSPACE}/${YAML_FILE}", returnStdout: true)
                    echo "${kubernetesPodReadYamlData}"
                } 
            }
        }

        stage('start ansible playbook on docker') {
            when {
                beforeAgent true
                environment name: 'on_k8s', value: 'False'
            }
            steps{
                script {
                    withDockerContainer(args: "-v /root/.ssh:/root/.ssh", image: "") {
                        git branch: "${git_project_branch}", credentialsId: '17643215-09f8-4a9a-b0ea-c8e49777ce1d', url: "${git_project_url}"
                        sh "ansible-playbook -i config/${client}/monitor config/${client}/monitor.yml -e @config/${client}/monitor_vars.yml --tags ${tags}"
                    }
                }
            }
        }

        stage('start ansible playbook on kubernetes') {
            when {
                beforeAgent true
                environment name: 'on_k8s', value: 'True'
            }

            agent {
                kubernetes{
                    cloud 'kubernetes'
                    yaml "${kubernetesPodReadYamlData}"
                }
            }

            steps{
                script {
                    container("jenkins-job") {
                        git branch: "${git_project_branch}", credentialsId: '17643215-09f8-4a9a-b0ea-c8e49777ce1d', url: "${git_project_url}"
                        sh "ansible-playbook -i config/${client}/monitor config/${client}/monitor.yml -e @config/${client}/monitor_vars.yml --tags ${tags}"
                    }
                }
            }
        }
    }
}