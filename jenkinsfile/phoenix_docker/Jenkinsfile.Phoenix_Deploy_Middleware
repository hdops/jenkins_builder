def node="master"
if (env.node){
    node =env.node
}

if (!env.on_k8s){
    env.on_k8s="False"
}

if (!env.GIT_GROUP){
    env.GIT_GROUP="phoenix-config"
}

pipeline {
    agent {label node}
	options {
	    timeout(time: 120, unit: 'MINUTES')
    }
    stages {
	    stage('delete workspace') {
			steps{
				deleteDir()
			}
        }
        stage('下载phoenix_template') {
			steps{
                git branch: "${params.GIT_BRANCH}", credentialsId: '17643215-09f8-4a9a-b0ea-c8e49777ce1d', url: "http://gitlab.app.hd123.cn:10080/${GIT_GROUP}/${params.GIT_REPONAME}.git"
			}
        }
        stage('get crmVersion') {
            steps {
                script{
                    data = readYaml file: 'docker_environments.yaml'
                    echo "crmVersion is ${data.crmVersion}"
                    echo "on_k8s is ${env.on_k8s}"
                    echo "node is ${node}"
                    if (data.crmVersion){
                        env.version = data.crmVersion
                    } else {
                        error "can not get crmVersion"
                    }
                }
            }
        }
        stage('deploy 中间件 on docker') {
            when {
                beforeAgent true
                environment name: 'on_k8s', value: 'False'
            }
            steps {
                script{    
                    withDockerContainer(args: "-v ${WORKSPACE}:/opt", image: "harbor.qianfan123.com/toolset/phoenixcore:${version}") {
                        sh "phoenix-tools version"
                        sh "chmod +x inventory.py"
                        sh "phoenix-tools deploy_middleware --workspace /opt --dryrun ${params.dryrun}"      
                    }
                }
            }
        }
        stage('deploy 中间件 on k8s') {
            when {
                beforeAgent true
                environment name: 'on_k8s', value: 'True'
            }

            agent {
                kubernetes{
                    cloud 'kubernetes'
                    containerTemplate {
                        name 'hdphoenixtoolsetcore'
                        image  "harbor.qianfan123.com/toolset/phoenixcore:${version}"
                        ttyEnabled true
                        command 'sleep'
                        args '100'
                    }
                }
            }

            steps {
                script{
                    container("hdphoenixtoolsetcore")   {
                        sh "phoenix-tools version"
                        sh "chmod +x inventory.py"
                        sh "phoenix-tools deploy_middleware --workspace ${WORKSPACE} --dryrun ${params.dryrun}"       
                    }
                } 
            }
        }
    }
}
