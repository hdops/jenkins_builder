def node="master"
if (env.node){
    node =env.node
}

if (!env.GIT_GROUP){
    env.GIT_GROUP="phoenix-config"
}

def GITLAB_URL="http://gitlab.app.hd123.cn:10080"
def YAML_FILE="hdphoenixtoolsetcore.yaml"
if (env.GITLAB_URL){
    GITLAB_URL =env.GITLAB_URL
}

def run_on_public="None"
if (env.run_on_public){
    run_on_public=env.run_on_public
}
if (!env.on_k8s){
    env.on_k8s="False"
}
if (env.set_on_k8s) {
    env.on_k8s=env.set_on_k8s
}

def func = {
    sh "phoenix-tools version"
    echo "注: 6.22.0后版本才支持该功能"
    sh "phoenix-tools change_erueka --subsystem ${params.subsystem}  --tag ${params.tag}"
}

pipeline {
    agent {label node}

    stages {
        stage('delete workspace') {
			steps{
				deleteDir()
			}
        }
        stage('delete toolset error docker') {
			steps{
                script {
                    if(env.on_k8s == 'True'){
                        echo "kubernetes do not need delete"
                    } else {
                        sh "docker ps -a | grep harbor.qianfan123.com/toolset/phoenixcore | grep -v ' Up '"
                        sh "docker rm $(docker ps -a | grep harbor.qianfan123.com/toolset/phoenixcore | grep -v ' Up ' | awk '{print $1}')"
                    }
                }
			}
        }
    }
    post{
        failure{
            script{

                def subject = env.email_subject ? "[Jenkins]${env.email_subject}" : "[Jenkins]failure on Job ${env.JOB_NAME}"
                def to = env.email_recipients ? "${env.email_recipients}" : "buhaiqing@hd123.com"
                def body = env.email_body ? "${env.email_body}" : "failure on Job ${env.JOB_NAME}"
                // send email
                emailext subject: subject, to: to, body:body,attachLog:true
            }
        }
    }
}
