// 该 def run_on_public="None"
if (env.run_on_public){
    run_on_public=env.run_on_public
}
pipeline 已过时
def node=""
if (env.node){
    node =env.node
}else{
    node ="master"
}
def whether_post=""
if (env.whether_post){
    whether_post =env.whether_post
}else{
    whether_post ="True"
}
def run_on_public="None"
if (env.run_on_public){
    run_on_public=env.run_on_public
}
pipeline {
   agent {label node}
    options {   
	    timeout(time: 3, unit: 'HOURS')
    }               
    stages {
	    stage('delete workspace') {
			steps{
				deleteDir()
			}
	    }
		stage('download toolset') {
			steps{
				sh "git clone http://${GIT_USER}:${GIT_PASSWORD}@github.app.hd123.cn:10080/qianfanops/iac.git -b ${params.GIT_BRANCH} ."
			}
        }
        stage('install falcon') {
			steps{
			    sh "ansible-playbook -i ${params.ssh_ip} --extra-vars 'ansible_user=${params.ssh_user} ansible_port=${params.ssh_port} rds_hostname=${params.rds_hostname} rds_port=${params.rds_port} rds_user=${params.rds_user} rds_password=${params.rds_password} falonredis_port=${params.falonredis_port} falconplus_8433port=${params.falcontransfer_8433port} falconplus_8080port=${params.falconapi_8080port} falconplus_6030port=${params.falconheartbeat_6030port} falcondashboard_8081port=${params.falcondashboard_8081port}' hdiac/falcon/main.yml"
			}
		}
    }
	post {
    // 构建失败之后钉钉通知
        failure {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "构建失败 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
	// 失败转成功之后钉钉通知
        fixed {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "恢复正常 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
    }
}