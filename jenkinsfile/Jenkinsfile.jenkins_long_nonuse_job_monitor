def node="master"
if (env.node){
    node =env.node
}

def whether_post="False"
if (env.whether_post){
    whether_post =env.whether_post
}

pipeline {
    agent {label node}
	options {   
	    timeout(time: 3, unit: 'HOURS')
    }          
	//triggers {  
    stages {
        stage('download toolset') {
			steps{
				echo "profile is ${params.DNET_PROFILE}"
                retry(2){
				    sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet hdops download_toolset --branch ${params.GIT_BRANCH} -p ."
                }
				sh "tar zxf toolset.tar.gz -C ${WORKSPACE}"
			}
        }
        stage('jenkins长时间不使用job预警') {
			steps{
				sh "DINGTALK_TOKEN=${DINGTALK_TOKEN} hdmon jenkins_job_monitor long_nonuse --cfgname ${params.cfgname} --receivers ${params.receivers}"
			}
        }
    }
	post {
    // 构建失败之后钉钉通知
        failure {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "构建失败 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
	// 失败转成功之后钉钉通知
        fixed {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "恢复正常 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
    }
}

