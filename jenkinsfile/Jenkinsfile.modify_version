def node="master"
if (env.node){
    node =env.node
}

def whether_post="False"
if (env.whether_post){
    whether_post =env.whether_post
}
def toolset_image_version="0.3.0-private"
if (env.toolset_image_version){
    toolset_image_version = env.toolset_image_version
}


def TOOLSET_DOCKER_REGISTRY_BASEURL = "harbor.qianfan123.com/toolset"
if (env.TOOLSET_DOCKER_REGISTRY_BASEURL){
    TOOLSET_DOCKER_REGISTRY_BASEURL  = env.TOOLSET_DOCKER_REGISTRY_BASEURL
}


def ci_git_server_baseurl= "http://github.app.hd123.cn:10080"
if (env.ci_git_server_baseurl){
    ci_git_server_baseurl = env.ci_git_server_baseurl
}
def credentialsId="17643215-09f8-4a9a-b0ea-c8e49777ce1d"
if (env.credentials_id){
  credentialsId = env.credentials_id
}
def git_branch = "develop"
if (env.git_branch){
    git_branch = env.git_branch
}

// qianfanops/toolset
def git_project = "xxx"
if (env.git_project){
   git_project = env.git_project
}

def run_on_public="None"
if (env.run_on_public){
    run_on_public=env.run_on_public
}
if (!env.on_k8s){
    env.on_k8s="False"
}
if (env.set_on_k8s) {
    env.on_k8s=env.set_on_k8s
}
pipeline {
    agent {label node}
	options {   
	    timeout(time: 5, unit: 'MINUTES')
    }
    environment {
        GITLAB_USER = credentials("${credentialsId}")
    }    
    stages {
        stage('更改制品版本') {
			steps{
				script {
                    if(env.on_k8s == 'True'){
                        container('hdtoolsetcore'){
                            deleteDir()
                            echo "product is ${params.DNET_PRODUCT}"
                            echo "active profile is ${params.DNET_PROFILE}"
                            echo "git branch is ${git_branch}"

                            // checkout code
                            retry(3){
                                checkout([$class: 'GitSCM', branches: [[name: "*/${git_branch}"]],userRemoteConfigs: [[credentialsId: "${credentialsId}",url: "${ci_git_server_baseurl}/${git_project}.git"]]])
                            }

                            def status = sh(returnStatus:true,script:"DNET_PROFILE=${params.DNET_PROFILE} DNET_PRODUCT=${params.DNET_PRODUCT} hdops modify_version --image '${image}'")
                            def result = ci_git_server_baseurl.split("://")
                            def git_url = result[0] + "://" + GITLAB_USER_USR + ":" + GITLAB_USER_PSW + "@" + result[1] + "/" + git_project + ".git"
                            if(status == 0){
                                sh """
                                git config --global credential.helper store
                                git config user.email "${GITLAB_USER_USR}@hd123.com"
                                git config user.name "${GITLAB_USER_USR}"
                                git checkout ${git_branch}
                                git pull ${git_url} ${git_branch}:${git_branch}
                                git add .
                                git commit -m "[${DNET_PRODUCT}]update settings : ${image} in ${DNET_PROFILE} "
                                git push ${git_url}
                                """
                            }
                            if (status !=0 && status != 1) {
                                sh "`exit ${status}`"
                            }
                        }
                    }else {
                        deleteDir()
                        echo "product is ${params.DNET_PRODUCT}"
                        echo "active profile is ${params.DNET_PROFILE}"
                        echo "git branch is ${git_branch}"

                        docker.image("${TOOLSET_DOCKER_REGISTRY_BASEURL}/toolsetcore:${toolset_image_version}").pull()
                        docker.image("${TOOLSET_DOCKER_REGISTRY_BASEURL}/toolsetcore:${toolset_image_version}").inside  {
                            // checkout code
                            retry(3){
                                checkout([$class: 'GitSCM', branches: [[name: "*/${git_branch}"]],userRemoteConfigs: [[credentialsId: "${credentialsId}",url: "${ci_git_server_baseurl}/${git_project}.git"]]])
                            }
                            def status = sh(returnStatus:true,script:"DNET_PROFILE=${params.DNET_PROFILE} DNET_PRODUCT=${params.DNET_PRODUCT} hdops modify_version --image '${image}'")
                            def result = ci_git_server_baseurl.split("://")
                            def git_url = result[0] + "://" + GITLAB_USER_USR + ":" + GITLAB_USER_PSW + "@" + result[1] + "/" + git_project + ".git"
                            if(status == 0){
                                sh """
                                git config --global credential.helper store
                                git config user.email "${GITLAB_USER_USR}@hd123.com"
                                git config user.name "${GITLAB_USER_USR}"
                                git checkout ${git_branch}
                                git pull ${git_url} ${git_branch}:${git_branch}
                                git add .
                                git commit -m "[${DNET_PRODUCT}]update settings : ${image} in ${DNET_PROFILE} "
                                git push ${git_url}
                                """
                            }
                            if (status !=0 && status != 1) {
                                sh "`exit ${status}`"
                            }
                        }
                    }
                }
			}

        }
        
    }

}
