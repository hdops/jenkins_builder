def node=""
if (env.node){
    node =env.node
}else{
    node ="master"
}
def whether_post=""
if (env.whether_post){
    whether_post =env.whether_post
}else{
    whether_post ="True"
}
pipeline {
    agent {label node}
    options {
	//     buildDiscarder(logRotator(numToKeepStr: '10'))
	//     disableConcurrentBuilds()
	//     disableResume()
	    timeout(time: 3, unit: 'HOURS')
    }
	// environment{
    //     DNET_PRIVATE_AK="$DNET_PRIVATE_AK"
    //     DNET_PRIVATE_AS="$DNET_PRIVATE_AS"
 	// }
	// parameters {
	//     choice(name:'DNET_PROFILE', choices:'integration_test\ndev_test\nbranch_test\nproduction\nprd-guoda\nuat')
	//     choice(name:'DNET_PRODUCT', choices:['dly' , 'baas', 'pluto' , 'scm'])
	//     string(name: 'image', defaultValue: 'None', description: '镜像名称',trim: true)
	//     choice(name:'tag', choices:'--请选择\nNone\nblue\ngreen')
	//     choice(name:'dryrun', choices:'True\nFalse')
	//     string(name: 'GIT_BRANCH', defaultValue: 'develop', description: 'git branch',trim: true)
	// }
	stages {
	    stage('changedubbo') {
			steps{
				script{
					if (env.on_k8s){
						container('hdtoolsetcore'){
							echo "active profile is ${params.DNET_PROFILE}"
							echo "product is ${params.DNET_PRODUCT}"
							echo "workspace is $WORKSPACE"
							retry(2){
								sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet hdops download_toolset --branch ${params.GIT_BRANCH} -p ."
							}
							sh "tar zxf toolset.tar.gz -C $WORKSPACE"
							sh "DNET_PRODUCT=${params.DNET_PRODUCT} DNET_PROFILE=${params.DNET_PROFILE} hdops change_dubbo --image ${params.image} --tag ${params.tag} --dryrun ${params.dryrun}"
						}
					}else {
						echo "active profile is ${params.DNET_PROFILE}"
						echo "product is ${params.DNET_PRODUCT}"
						echo "workspace is $WORKSPACE"
						//docker.image("harbor.qianfan123.com/toolset/toolsetcore:0.3.0").withRun('-v /var/run/docker.sock:/var/run/docker.sock') {
                            retry(2){
                                sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet hdops download_toolset --branch ${params.GIT_BRANCH} -p ."
                            }
                            sh "tar zxf toolset.tar.gz -C $WORKSPACE"
                            sh "DNET_PRODUCT=${params.DNET_PRODUCT} DNET_PROFILE=${params.DNET_PROFILE} hdops change_dubbo --image ${params.image} --tag ${params.tag} --dryrun ${params.dryrun}"
                        //}
					}
				}
				
			}
        }
	}
	post {
    // 构建失败之后钉钉通知
        failure {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "构建失败 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
	// 失败转成功之后钉钉通知
        fixed {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "恢复正常 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
    }

}
