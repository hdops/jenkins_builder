def node="master"
if (env.node){
    node =env.node
}

def whether_post="False"
if (env.whether_post){
    whether_post =env.whether_post
}

pipeline {
    agent {label node}
    options {   
	    timeout(time: 1, unit: 'HOURS')
    }            
	stages {
	    stage('dft_tomcat_accesslog_check') {
			steps{
				script{
					if(env.on_k8s){
						container("hdtoolsetcore"){
							echo "active profile is ${params.DNET_PROFILE}"
							echo "product is ${params.DNET_PRODUCT}"
							echo "workspace is $WORKSPACE"
							retry(2){
								sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet hdops download_toolset --branch ${params.GIT_BRANCH} -p ."
							}
							sh "tar zxf toolset.tar.gz -C $WORKSPACE"
							sh "DNET_PRODUCT=${params.DNET_PRODUCT} DNET_PROFILE=${params.DNET_PROFILE} hdops dft_tomcat_accesslog_reponsetime_check --interval ${params.interval} --receivers ${params.receivers}"
						}

					}else {
						echo "active profile is ${params.DNET_PROFILE}"
						echo "product is ${params.DNET_PRODUCT}"
						echo "workspace is $WORKSPACE"
						retry(2){
							sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet hdops download_toolset --branch ${params.GIT_BRANCH} -p ."
						}
						sh "tar zxf toolset.tar.gz -C $WORKSPACE"
						sh "DNET_PRODUCT=${params.DNET_PRODUCT} DNET_PROFILE=${params.DNET_PROFILE} hdops dft_tomcat_accesslog_reponsetime_check --interval ${params.interval} --receivers ${params.receivers}"
					}
				}
			}
        }

	}
	post {
    // 构建失败之后钉钉通知
        failure {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "构建失败 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
	// 失败转成功之后钉钉通知
        fixed {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "恢复正常 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
    }
}
