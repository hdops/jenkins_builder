def node=""
if (env.node){
    node =env.node
}else{
    node ="master"
}
def whether_post="False"
if (env.whether_post){
    whether_post =env.whether_post
}

pipeline {
    agent {label node}
    options {   
	    timeout(time: 3, unit: 'HOURS')
    }                

	stages {
		stage('日志清理') {
			steps{
				script{
					if (env.on_k8s){
						container("hdtoolsetcore"){
							echo "active profile is ${params.DNET_PROFILE}"
							echo "toolset path is ${WORKSPACE}"
							echo "sub systems are ${params.subsystem}"
							echo "skip version is ${params.skipversion}"
							echo "upstream URL is ${params.upurl}"
							echo "svnreversion is ${params.svnreversion}"
							retry(2){
								sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet hdops download_toolset --branch ${params.GIT_BRANCH} -p ."
							}
							sh "tar zxf toolset.tar.gz -C ${WORKSPACE}"
							sh "DNET_PRODUCT=${params.DNET_PRODUCT} DNET_PROFILE=${params.DNET_PROFILE} hdmon check_ecslog_keepday --filename $filename --days ${params.days} --logtype ${params.logtype} --dryrun ${params.dryrun}"
						}
					}else {
                        //docker.image("harbor.qianfan123.com/toolset/toolsetcore:0.3.0").withRun('-v /var/run/docker.sock:/var/run/docker.sock') {
                            echo "active profile is ${params.DNET_PROFILE}"
                            echo "toolset path is ${WORKSPACE}"
                            echo "sub systems are ${params.subsystem}"
                            echo "skip version is ${params.skipversion}"
                            echo "upstream URL is ${params.upurl}"
                            echo "svnreversion is ${params.svnreversion}"
                            retry(2){
                                sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet hdops download_toolset --branch ${params.GIT_BRANCH} -p ."
                            }
                            sh "tar zxf toolset.tar.gz -C ${WORKSPACE}"
                            sh "DNET_PRODUCT=${params.DNET_PRODUCT} DNET_PROFILE=${params.DNET_PROFILE} hdmon check_ecslog_keepday --filename $filename --days ${params.days} --logtype ${params.logtype} --dryrun ${params.dryrun}"
                        //}
					}
				}

			}
        }
	    
	}
	post {
    // 构建失败之后钉钉通知
        failure {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "构建失败 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
	// 失败转成功之后钉钉通知
        fixed {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "恢复正常 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
    }
}

