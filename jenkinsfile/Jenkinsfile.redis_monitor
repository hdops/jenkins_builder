def node=""
if (env.node){
    node =env.node
}else{
    node ="master"
}
def whether_post="False"
if (env.whether_post){
    whether_post =env.whether_post
}

pipeline {
    agent {label node}
	options {
	//    buildDiscarder(logRotator(numToKeepStr: '10'))
	//    disableConcurrentBuilds()
	//    disableResume()
	    timeout(time: 2, unit: 'MINUTES')
    }
	// environment{
    //     DNET_PRIVATE_AK="$DNET_PRIVATE_AK"
    //     DNET_PRIVATE_AS="$DNET_PRIVATE_AS"
 	// }
	// parameters {
	//    choice(name:'DNET_PROFILE', choices:'integration_test\nbranch_test\nuat\nproduction')
	//    string(name: 'DNET_PRODUCT', defaultValue: 'pay', description: '')
	//    string(name: 'DNET_EXPORT_FILE', defaultValue: 'main.yaml', description: '配置文件')
	//    string(name: 'GIT_BRANCH', defaultValue: 'develop', description: '')
	//    choice(name: 'DNET_CLOUD_VENDOR', choices:'tencent\naliyun', description: '')
	// }
	triggers {
        cron '* * * * *'
     }
    stages {
        stage('redis_monitor') {
			steps{
				script {
                    if (env.on_k8s){
                        container("hdtoolsetcore"){
                            echo "profile is ${params.DNET_PROFILE}"
                            retry(2){
                                sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet hdops download_toolset --branch ${params.GIT_BRANCH} -p ."
                            }
                            sh "tar zxf toolset.tar.gz -C ${WORKSPACE}"
                            sh "DNET_PROFILE=${params.DNET_PROFILE} DNET_PRODUCT=${params.DNET_PRODUCT} DNET_CLOUD_VENDOR=${params.DNET_CLOUD_VENDOR} DNET_EXPORT_FILE=${params.DNET_EXPORT_FILE} hdmon statistic --action redis_monitor"
                        }
                    }else {
                        echo "profile is ${params.DNET_PROFILE}"
                        retry(2){
                            sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet hdops download_toolset --branch ${params.GIT_BRANCH} -p ."
                        }
                        sh "tar zxf toolset.tar.gz -C ${WORKSPACE}"
                        sh "DNET_PROFILE=${params.DNET_PROFILE} DNET_PRODUCT=${params.DNET_PRODUCT} DNET_CLOUD_VENDOR=${params.DNET_CLOUD_VENDOR} DNET_EXPORT_FILE=${params.DNET_EXPORT_FILE} hdmon statistic --action redis_monitor"
                    }
                }
			}
        }
        
    }
	post {
    // 构建失败之后钉钉通知
        failure {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "构建失败 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
	// 失败转成功之后钉钉通知
        fixed {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "恢复正常 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
    }
}

