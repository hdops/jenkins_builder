def node="master"
if (env.node){
    node =env.node
}

def whether_post="False"
if (env.whether_post){
    whether_post =env.whether_post
}
def toolset_image_version="0.3.0-private"
if (env.toolset_image_version){
    toolset_image_version = env.toolset_image_version
}
pipeline {
    agent {label node}
    options {
	//    buildDiscarder(logRotator(numToKeepStr: '10'))
	//    disableConcurrentBuilds()
	//    disableResume()
	    timeout(time: 3, unit: 'HOURS')
    }
	// environment{
    //     DNET_PRIVATE_AK="$DNET_PRIVATE_AK"
    //     DNET_PRIVATE_AS="$DNET_PRIVATE_AS"
 	// }
	// parameters {
	// 	choice(name:'LOGSTASH_FILENAME', choices:'logstash/logstash-jenkins-master.yaml')
	//     string(name: 'GIT_BRANCH', defaultValue: 'develop', description: 'git branch',trim: true)
	//    // string(name: 'DINGTALK_TOKEN', defaultValue: '5dce188d27a762b3c2518c9b2e3a96b9a3da6564a6a679dd34e0b587600576ba', description: 'dingding token',trim: true)
	// }
	// triggers {
    //     cron '*/2 * * * *'
    //  }

	stages {
		stage('logstash 巡检') {
			steps{
				script {
					if (env.on_k8s){
						container("hdtoolsetcore"){
							echo "active profile is ${params.DNET_PROFILE}"
							echo "toolset path is ${WORKSPACE}"
							retry(2){
								sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet hdops download_toolset --branch ${params.GIT_BRANCH} -p ."
							}
							sh "tar zxf toolset.tar.gz -C ${WORKSPACE}"
							sh "LOGSTASH_FILENAME=${params.LOGSTASH_FILENAME} DINGTALK_TOKEN=${DINGTALK_TOKEN} hdops monitor_logstash"
							archiveArtifacts 'statistics_faild_logstash.json'
						}
					}else {
						echo "active profile is ${params.DNET_PROFILE}"
						echo "toolset path is ${WORKSPACE}"
						docker.image("harbor.qianfan123.com/toolset/toolsetcore:${toolset_image_version}").inside  {
                            retry(2){
                                sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet hdops download_toolset --branch ${params.GIT_BRANCH} -p ."
                            }
                            sh "tar zxf toolset.tar.gz -C ${WORKSPACE}"
                            sh "LOGSTASH_FILENAME=${params.LOGSTASH_FILENAME} DINGTALK_TOKEN=${DINGTALK_TOKEN} hdops monitor_logstash"
                            archiveArtifacts 'statistics_faild_logstash.json'
						}
					}
				}
			}
			
        }
	    

	}
	post {
    // 构建失败之后钉钉通知
        failure {
            script {
				build job: "${params.statistics_job}", parameters: [string(name: 'workspace_job', value: "${WORKSPACE}")], propagate: false, wait: false
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "构建失败 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
	// 失败转成功之后钉钉通知
        fixed {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "恢复正常 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
    }
}

