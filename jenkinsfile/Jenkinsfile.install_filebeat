// 该 def run_on_public="None"
if (env.run_on_public){
    run_on_public=env.run_on_public
}
pipeline 已过时
def node="master"
if (env.node){
    node =env.node
}

def whether_post="False"
if (env.whether_post){
    whether_post =env.whether_post
}

def docker_image='harbor.qianfan123.com/base/iac:0.1.0'
if (env.docker_image){
    docker_image = env.docker_image
}

def jenkins_home=''
if (env.jenkins_home){
  jenkins_home = env.jenkins_home
}

def inventory= 'elk_build_quickly/elk_inventory'
if(env.inventory){
    inventory = env.inventory
}

def ansible_playbook='hdiac/filebeat/filebeat7.yml'
if (env.ansible_playbook){
    ansible_playbook = env.ansible_playbook
}
def var_file='elk_build_quickly/filebeat_vars.yml'
if (env.var_file){
    var_file = env.var_file
}

def GIT_BRANCH = 'develop'
if (env.GIT_BRANCH){
    GIT_BRANCH = env.GIT_BRANCH
}

def private_toolset_repo ="qianfanops/toolset_x"
if (env.private_toolset_repo){
    private_toolset_repo = env.private_toolset_repo
}

def git_server_base_url="github.app.hd123.cn:10080"
if (env.git_server_base_url){
    git_server_base_url = env.git_server_base_url
}

def run_on_public="None"
if (env.run_on_public){
    run_on_public=env.run_on_public
}
if (!env.on_k8s){
    env.on_k8s="False"
}
if (env.set_on_k8s) {
    env.on_k8s=env.set_on_k8s
}
pipeline {
    agent {label node}
	options {   
	    timeout(time: 20, unit: 'MINUTES')
    }        
    stages {         
       
        stage('install filebeat') {
			steps{
			    script{
			        deleteDir()
                    sh "git clone http://${GIT_USER}:${GIT_PASSWORD}@github.app.hd123.cn:10080/${private_toolset_repo}.git -b ${GIT_BRANCH} ."

                    sh "docker pull ${docker_image}"
				    sh "docker run -i --rm -v /root/.ssh:/root/.ssh -v ${params.jenkins_home}/workspace/${JOB_NAME}/elk_build_quickly:/root/iac/elk_build_quickly ${docker_image} 'ansible-playbook -i ${inventory} ${ansible_playbook} -e @${var_file}'"
			    }

			}
        }
    }
	post {
    // 构建失败之后钉钉通知
        failure {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "构建失败 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
	// 失败转成功之后钉钉通知
        fixed {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "恢复正常 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
    }
}

