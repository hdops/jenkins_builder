def node="master"
if (env.node){
    node =env.node
}

def whether_post="False"
if (env.whether_post){
    whether_post =env.whether_post
}

pipeline {
    agent {label node}
	options {
	//     buildDiscarder(logRotator(numToKeepStr: '10'))
	//     disableConcurrentBuilds()
	//     disableResume()
	    timeout(time: 3, unit: 'HOURS')
    }
    // environment{
    //     DNET_PRIVATE_AK="$DNET_PRIVATE_AK"
    //     DNET_PRIVATE_AS="$DNET_PRIVATE_AS"
 	// }
	// parameters {
	//    choice(name:'DNET_PROFILE', choices:['integration_test'])
	//    string(name: 'DNET_PRODUCT', defaultValue: 'pay', description: '')
	//    string(name: 'GIT_BRANCH', defaultValue: 'develop', description: 'develop')
	//    string(name: 'receivers', defaultValue: 'gaoweizong@hd123.com,lishuaiqi@hd123.com,buhaiqing@hd123.com', description: 'develop')
	//   // string(name: 'DINGTALK_TOKEN', defaultValue: '7d09ce0ee780c81299dd790940f78c5c5fa8f4b73a8d8c31f25a7b5f4be87e58', description: '钉钉token')
	// }
	// triggers {
    //     cron 'H/15 * * * *'
    //  }
    stages {
        stage('删除workspace') {
            steps{
                deleteDir()
            }
        }

        stage('check falcon-agent') {
			steps{
			    script{
			        if (env.on_k8s){
			            container("hdtoolsetcore"){
			                retry(2){
                                sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet hdops download_toolset --branch ${params.GIT_BRANCH} -p ."
                            }
                            sh "tar zxf toolset.tar.gz -C ${WORKSPACE}"
                            sh "DNET_PROFILE=${params.DNET_PROFILE}  DNET_PRODUCT=${params.DNET_PRODUCT} hdops falcon_agent_check"
			            }
			        }else{
			            //docker.image("harbor.qianfan123.com/toolset/toolsetcore:0.3.0").withRun('-v /var/run/docker.sock:/var/run/docker.sock') {
			                retry(2){
                                sh "DNET_PROFILE=integration_test DNET_PRODUCT=dnet hdops download_toolset --branch ${params.GIT_BRANCH} -p ."
                            }
                            sh "tar zxf toolset.tar.gz -C ${WORKSPACE}"
                            sh "DNET_PROFILE=${params.DNET_PROFILE}  DNET_PRODUCT=${params.DNET_PRODUCT} hdops falcon_agent_check"
			           // }

			        }

			    }

			}
        }
    }
	post {
		always {
            sh "DNET_PROFILE=${params.DNET_PROFILE}  DNET_PRODUCT=${params.DNET_PRODUCT} hdops autorestart_falcon_agent --fileflag"
        }
    // 构建失败之后钉钉通知
        failure {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "构建失败 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
	// 失败转成功之后钉钉通知
        fixed {
            script {
                if (whether_post == "True") {
                    dingTalk accessToken: "${DINGTALK_TOKEN}", imageUrl: '', jenkinsUrl: "${jenkinsUrl}", message: "恢复正常 ${new Date().format("yyyy-MM-dd HH:mm:ss")}", notifyPeople: ''
                }
            }
        }
    }
}

